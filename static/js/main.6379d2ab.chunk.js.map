{"version":3,"sources":["Components/Editabled/Editable.js","Components/Dropdown/Dropdown.js","Components/Modal/Modal.js","Components/Card/CardInfo/CardInfo.js","Components/Card/Card.js","Components/Board/Board.js","view/pages/kanban.js","view/auth/login.js","view/auth/register.js","App.js","index.js"],"names":["Editable","props","isEditable","setIsEditable","useState","inputText","setInputText","defaultValue","_jsx","className","children","_jsxs","concat","editClass","onSubmit","e","preventDefault","type","value","placeholder","text","onChange","event","target","autoFocus","buttonText","X","onClick","displayClass","Dropdown","dropdownRef","useRef","handleClick","_dropdownRef$current","current","contains","onClose","useEffect","document","addEventListener","removeEventListener","ref","class","Modal","stopPropagation","CardInfo","_values$labels","_values$tasks4","selectedColor","setSelectedColor","values","setValues","card","calculatePercent","_values$tasks","_values$tasks2","_values$tasks2$filter","_values$tasks3","tasks","length","filter","item","completed","updateCard","boardId","id","Type","title","List","desc","Calendar","date","min","Date","toISOString","substr","Tag","labels","map","index","style","backgroundColor","color","label","tempLabels","removeLabel","addLabel","findIndex","CheckSquare","width","defaultChecked","updateTask","checked","Trash","tempTasks","removeTask","task","now","Math","random","Card","_tasks$filter","showDropdown","setShowDropdown","showModal","setShowModal","_Fragment","draggable","onDragEnd","dragEnded","onDragEnter","dragEntered","MoreHorizontal","removeCard","Clock","getDate","getMonth","formatDate","Board","_props$board","_props$board2","_props$board2$cards","_props$board3","_props$board3$cards","board","cards","removeBoard","_props$board4","addCard","Kanban","history","useHistory","boards","setBoards","JSON","parse","localStorage","getItem","targetCard","setTargetCard","bid","cid","addCardHandler","tempBoards","push","cardIndex","splice","_boards$s_boardIndex","_boards$s_boardIndex$","_boards$t_boardIndex","_boards$t_boardIndex$","s_boardIndex","s_cardIndex","t_boardIndex","t_cardIndex","sourceCard","setItem","stringify","IoIosLogOut","window","clear","toast","success","name","Login","email","setEmail","password","setPassword","authData","setAuthData","handleLogin","error","Register","handleRegister","App","Router","Toaster","Switch","Route","path","exact","component","ReactDOM","render","React","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6379d2ab.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport { X } from \"react-feather\";\n\nimport \"./Editable.css\";\n\nfunction Editable(props) {\n  const [isEditable, setIsEditable] = useState(false);\n  const [inputText, setInputText] = useState(props.defaultValue || \"\");\n\n  const submission = (e) => {\n    e.preventDefault();\n    if (inputText && props.onSubmit) {\n      setInputText(\"\");\n      props.onSubmit(inputText);\n    }\n    setIsEditable(false);\n  };\n\n  return (\n    <div className=\"editable\">\n      {isEditable ? (\n        <form\n          className={`editable_edit ${props.editClass ? props.editClass : \"\"}`}\n          onSubmit={submission}\n        >\n          <input\n            type=\"text\"\n            value={inputText}\n            placeholder={props.placeholder || props.text}\n            onChange={(event) => setInputText(event.target.value)}\n            autoFocus\n          />\n          <div className=\"editable_edit_footer\">\n            <button type=\"submit\">{props.buttonText || \"Add\"}</button>\n            <X onClick={() => setIsEditable(false)} className=\"closeIcon\" />\n          </div>\n        </form>\n      ) : (\n        <p\n          className={`editable_display ${\n            props.displayClass ? props.displayClass : \"\"\n          }`}\n          onClick={() => setIsEditable(true)}\n        >\n          {props.text}\n        </p>\n      )}\n    </div>\n  );\n}\n\nexport default Editable;\n","import React, { useEffect, useRef } from \"react\";\n\nimport \"./Dropdown.css\";\n\nfunction Dropdown(props) {\n  const dropdownRef = useRef();\n\n  const handleClick = (event) => {\n    if (\n      dropdownRef &&\n      !dropdownRef.current?.contains(event.target) &&\n      props.onClose\n    )\n      props.onClose();\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClick);\n\n    return () => {\n      document.removeEventListener(\"click\", handleClick);\n    };\n  });\n\n  return (\n    <div\n      ref={dropdownRef}\n      className={`dropdown custom-scroll ${props.class ? props.class : \"\"}`}\n    >\n      {props.children}\n    </div>\n  );\n}\n\nexport default Dropdown;\n","import React from \"react\";\n\nimport \"./Modal.css\";\n\nfunction Modal(props) {\n  return (\n    <div\n      className=\"modal\"\n      onClick={() => (props.onClose ? props.onClose() : \"\")}\n    >\n      <div\n        className=\"modal_content custom-scroll\"\n        onClick={(event) => event.stopPropagation()}\n      >\n        {props.children}\n      </div>\n    </div>\n  );\n}\n\nexport default Modal;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Calendar,\n  CheckSquare,\n  List,\n  Tag,\n  Trash,\n  Type,\n  X,\n} from \"react-feather\";\n\nimport Modal from \"../../Modal/Modal\";\nimport Editable from \"../../Editabled/Editable\";\n\nimport \"./CardInfo.css\";\n\nfunction CardInfo(props) {\n  const colors = [\n    \"#a8193d\",\n    \"#4fcc25\",\n    \"#1ebffa\",\n    \"#8da377\",\n    \"#9975bd\",\n    \"#cf61a1\",\n    \"#240959\",\n  ];\n\n  const [selectedColor, setSelectedColor] = useState();\n  const [values, setValues] = useState({\n    ...props.card,\n  });\n\n  const updateTitle = (value) => {\n    setValues({ ...values, title: value });\n  };\n\n  const updateDesc = (value) => {\n    setValues({ ...values, desc: value });\n  };\n\n  const addLabel = (label) => {\n    const index = values.labels.findIndex((item) => item.text === label.text);\n    if (index > -1) return;\n\n    setSelectedColor(\"\");\n    setValues({\n      ...values,\n      labels: [...values.labels, label],\n    });\n  };\n\n  const removeLabel = (label) => {\n    const tempLabels = values.labels.filter((item) => item.text !== label.text);\n\n    setValues({\n      ...values,\n      labels: tempLabels,\n    });\n  };\n\n  const addTask = (value) => {\n    const task = {\n      id: Date.now() + Math.random() * 2,\n      completed: false,\n      text: value,\n    };\n    setValues({\n      ...values,\n      tasks: [...values.tasks, task],\n    });\n  };\n\n  const removeTask = (id) => {\n    const tasks = [...values.tasks];\n\n    const tempTasks = tasks.filter((item) => item.id !== id);\n    setValues({\n      ...values,\n      tasks: tempTasks,\n    });\n  };\n\n  const updateTask = (id, value) => {\n    const tasks = [...values.tasks];\n\n    const index = tasks.findIndex((item) => item.id === id);\n    if (index < 0) return;\n\n    tasks[index].completed = value;\n\n    setValues({\n      ...values,\n      tasks,\n    });\n  };\n\n  const calculatePercent = () => {\n    if (!values.tasks?.length) return 0;\n    const completed = values.tasks?.filter((item) => item.completed)?.length;\n    return (completed / values.tasks?.length) * 100;\n  };\n\n  const updateDate = (date) => {\n    if (!date) return;\n\n    setValues({\n      ...values,\n      date,\n    });\n  };\n\n  useEffect(() => {\n    if (props.updateCard) props.updateCard(props.boardId, values.id, values);\n  }, [values]);\n\n  return (\n    <Modal onClose={props.onClose}>\n      <div className=\"cardinfo\">\n        <div className=\"cardinfo_box\">\n          <div className=\"cardinfo_box_title\">\n            <Type />\n            <p>Title</p>\n          </div>\n          <Editable\n            defaultValue={values.title}\n            text={values.title}\n            placeholder=\"Enter Title\"\n            onSubmit={updateTitle}\n          />\n        </div>\n\n        <div className=\"cardinfo_box\">\n          <div className=\"cardinfo_box_title\">\n            <List />\n            <p>Description</p>\n          </div>\n          <Editable\n            defaultValue={values.desc}\n            text={values.desc || \"Add a Description\"}\n            placeholder=\"Enter description\"\n            onSubmit={updateDesc}\n          />\n        </div>\n\n        <div className=\"cardinfo_box\">\n          <div className=\"cardinfo_box_title\">\n            <Calendar />\n            <p>Date</p>\n          </div>\n          <input\n            type=\"date\"\n            defaultValue={values.date}\n            min={new Date().toISOString().substr(0, 10)}\n            onChange={(event) => updateDate(event.target.value)}\n          />\n        </div>\n\n        <div className=\"cardinfo_box\">\n          <div className=\"cardinfo_box_title\">\n            <Tag />\n            <p>Labels</p>\n          </div>\n          <div className=\"cardinfo_box_labels\">\n            {values.labels?.map((item, index) => (\n              <label\n                key={index}\n                style={{ backgroundColor: item.color, color: \"#fff\" }}\n              >\n                {item.text}\n                <X onClick={() => removeLabel(item)} />\n              </label>\n            ))}\n          </div>\n          <ul>\n            {colors.map((item, index) => (\n              <li\n                key={index + item}\n                style={{ backgroundColor: item }}\n                className={selectedColor === item ? \"li_active\" : \"\"}\n                onClick={() => setSelectedColor(item)}\n              />\n            ))}\n          </ul>\n          <Editable\n            text=\"Add Label\"\n            placeholder=\"Enter label text\"\n            onSubmit={(value) =>\n              addLabel({ color: selectedColor, text: value })\n            }\n          />\n        </div>\n\n        <div className=\"cardinfo_box\">\n          <div className=\"cardinfo_box_title\">\n            <CheckSquare />\n            <p>Tasks</p>\n          </div>\n          <div className=\"cardinfo_box_progress-bar\">\n            <div\n              className=\"cardinfo_box_progress\"\n              style={{\n                width: `${calculatePercent()}%`,\n                backgroundColor: calculatePercent() === 100 ? \"limegreen\" : \"\",\n              }}\n            />\n          </div>\n          <div className=\"cardinfo_box_task_list\">\n            {values.tasks?.map((item) => (\n              <div key={item.id} className=\"cardinfo_box_task_checkbox\">\n                <input\n                  type=\"checkbox\"\n                  defaultChecked={item.completed}\n                  onChange={(event) =>\n                    updateTask(item.id, event.target.checked)\n                  }\n                />\n                <p className={item.completed ? \"completed\" : \"\"}>{item.text}</p>\n                <Trash onClick={() => removeTask(item.id)} />\n              </div>\n            ))}\n          </div>\n          <Editable\n            text={\"Add a Task\"}\n            placeholder=\"Enter task\"\n            onSubmit={addTask}\n          />\n        </div>\n      </div>\n    </Modal>\n  );\n}\n\nexport default CardInfo;\n","import React, { useState } from \"react\";\nimport { CheckSquare, Clock, MoreHorizontal } from \"react-feather\";\n\nimport Dropdown from \"../Dropdown/Dropdown\";\n\nimport \"./Card.css\";\nimport CardInfo from \"./CardInfo/CardInfo\";\n\nfunction Card(props) {\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n  const { id, title, date, tasks, labels } = props.card;\n\n  const formatDate = (value) => {\n    if (!value) return \"\";\n    const date = new Date(value);\n    if (!date) return \"\";\n\n    const months = [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Aprl\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\",\n    ];\n\n    const day = date.getDate();\n    const month = months[date.getMonth()];\n    return day + \" \" + month;\n  };\n\n  return (\n    <>\n      {showModal && (\n        <CardInfo\n          onClose={() => setShowModal(false)}\n          card={props.card}\n          boardId={props.boardId}\n          updateCard={props.updateCard}\n        />\n      )}\n      <div\n        className=\"card\"\n        draggable\n        onDragEnd={() => props.dragEnded(props.boardId, id)}\n        onDragEnter={() => props.dragEntered(props.boardId, id)}\n        onClick={() => setShowModal(true)}\n      >\n        <div className=\"card_top\">\n          <div className=\"card_top_labels\">\n            {labels?.map((item, index) => (\n              <label key={index} style={{ backgroundColor: item.color }}>\n                {item.text}\n              </label>\n            ))}\n          </div>\n          <div\n            className=\"card_top_more\"\n            onClick={(event) => {\n              event.stopPropagation();\n              setShowDropdown(true);\n            }}\n          >\n            <MoreHorizontal />\n            {showDropdown && (\n              <Dropdown\n                class=\"board_dropdown\"\n                onClose={() => setShowDropdown(false)}\n              >\n                <p onClick={() => props.removeCard(props.boardId, id)}>\n                  Delete Card\n                </p>\n              </Dropdown>\n            )}\n          </div>\n        </div>\n        <div className=\"card_title\">{title}</div>\n        <div className=\"card_footer\">\n          {date && (\n            <p className=\"card_footer_item\">\n              <Clock className=\"card_footer_icon\" />\n              {formatDate(date)}\n            </p>\n          )}\n          {tasks && tasks?.length > 0 && (\n            <p className=\"card_footer_item\">\n              <CheckSquare className=\"card_footer_icon\" />\n              {tasks?.filter((item) => item.completed)?.length}/{tasks?.length}\n            </p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Card;\n","import React, { useState } from \"react\";\nimport { MoreHorizontal } from \"react-feather\";\n\nimport Card from \"../Card/Card\";\nimport Dropdown from \"../Dropdown/Dropdown\";\nimport Editable from \"../Editabled/Editable\";\n\nimport \"./Board.css\";\n\nfunction Board(props) {\n  const [showDropdown, setShowDropdown] = useState(false);\n\n  return (\n    <div className=\"board\">\n      <div className=\"board_header\">\n        <p className=\"board_header_title\">\n          {props.board?.title}\n          <span>{props.board?.cards?.length || 0}</span>\n        </p>\n        <div\n          className=\"board_header_title_more\"\n          onClick={() => setShowDropdown(true)}\n        >\n          <MoreHorizontal />\n          {showDropdown && (\n            <Dropdown\n              class=\"board_dropdown\"\n              onClose={() => setShowDropdown(false)}\n            >\n              <p onClick={() => props.removeBoard()}>Delete Board</p>\n            </Dropdown>\n          )}\n        </div>\n      </div>\n      <div className=\"board_cards custom-scroll\">\n        {props.board?.cards?.map((item) => (\n          <Card\n            key={item.id}\n            card={item}\n            boardId={props.board.id}\n            removeCard={props.removeCard}\n            dragEntered={props.dragEntered}\n            dragEnded={props.dragEnded}\n            updateCard={props.updateCard}\n          />\n        ))}\n        <Editable\n          text=\"+ Add Card\"\n          placeholder=\"Enter Card Title\"\n          displayClass=\"board_add-card\"\n          editClass=\"board_add-card_edit\"\n          onSubmit={(value) => props.addCard(props.board?.id, value)}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Board;\n","import React, { useEffect, useState } from \"react\";\r\nimport Editable from \"../../Components/Editabled/Editable\";\r\nimport { IoIosLogOut } from \"react-icons/io\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport toast from \"react-hot-toast\";\r\nimport Board from \"../../Components/Board/Board\";\r\nimport \"../../App.css\";\r\nfunction Kanban() {\r\n    const history = useHistory();\r\n    const [boards, setBoards] = useState(\r\n        JSON.parse(localStorage.getItem(\"prac-kanban\")) || []\r\n    );\r\n\r\n    const [targetCard, setTargetCard] = useState({\r\n        bid: \"\",\r\n        cid: \"\",\r\n    });\r\n\r\n    const addboardHandler = (name) => {\r\n        const tempBoards = [...boards];\r\n        tempBoards.push({\r\n            id: Date.now() + Math.random() * 2,\r\n            title: name,\r\n            cards: [],\r\n        });\r\n        setBoards(tempBoards);\r\n    };\r\n\r\n    const removeBoard = (id) => {\r\n        const index = boards.findIndex((item) => item.id === id);\r\n        if (index < 0) return;\r\n\r\n        const tempBoards = [...boards];\r\n        tempBoards.splice(index, 1);\r\n        setBoards(tempBoards);\r\n    };\r\n\r\n    const addCardHandler = (id, title) => {\r\n        const index = boards.findIndex((item) => item.id === id);\r\n        if (index < 0) return;\r\n\r\n        const tempBoards = [...boards];\r\n        tempBoards[index].cards.push({\r\n            id: Date.now() + Math.random() * 2,\r\n            title,\r\n            labels: [],\r\n            date: \"\",\r\n            tasks: [],\r\n        });\r\n        setBoards(tempBoards);\r\n    };\r\n\r\n    const removeCard = (bid, cid) => {\r\n        const index = boards.findIndex((item) => item.id === bid);\r\n        if (index < 0) return;\r\n\r\n        const tempBoards = [...boards];\r\n        const cards = tempBoards[index].cards;\r\n\r\n        const cardIndex = cards.findIndex((item) => item.id === cid);\r\n        if (cardIndex < 0) return;\r\n\r\n        cards.splice(cardIndex, 1);\r\n        setBoards(tempBoards);\r\n    };\r\n\r\n    const dragEnded = (bid, cid) => {\r\n        let s_boardIndex, s_cardIndex, t_boardIndex, t_cardIndex;\r\n        s_boardIndex = boards.findIndex((item) => item.id === bid);\r\n        if (s_boardIndex < 0) return;\r\n\r\n        s_cardIndex = boards[s_boardIndex]?.cards?.findIndex(\r\n            (item) => item.id === cid\r\n        );\r\n        if (s_cardIndex < 0) return;\r\n\r\n        t_boardIndex = boards.findIndex((item) => item.id === targetCard.bid);\r\n        if (t_boardIndex < 0) return;\r\n\r\n        t_cardIndex = boards[t_boardIndex]?.cards?.findIndex(\r\n            (item) => item.id === targetCard.cid\r\n        );\r\n        if (t_cardIndex < 0) return;\r\n\r\n        const tempBoards = [...boards];\r\n        const sourceCard = tempBoards[s_boardIndex].cards[s_cardIndex];\r\n        tempBoards[s_boardIndex].cards.splice(s_cardIndex, 1);\r\n        tempBoards[t_boardIndex].cards.splice(t_cardIndex, 0, sourceCard);\r\n        setBoards(tempBoards);\r\n\r\n        setTargetCard({\r\n            bid: \"\",\r\n            cid: \"\",\r\n        });\r\n    };\r\n\r\n    const dragEntered = (bid, cid) => {\r\n        if (targetCard.cid === cid) return;\r\n        setTargetCard({\r\n            bid,\r\n            cid,\r\n        });\r\n    };\r\n\r\n    const updateCard = (bid, cid, card) => {\r\n        const index = boards.findIndex((item) => item.id === bid);\r\n        if (index < 0) return;\r\n\r\n        const tempBoards = [...boards];\r\n        const cards = tempBoards[index].cards;\r\n\r\n        const cardIndex = cards.findIndex((item) => item.id === cid);\r\n        if (cardIndex < 0) return;\r\n\r\n        tempBoards[index].cards[cardIndex] = card;\r\n\r\n        setBoards(tempBoards);\r\n    };\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"prac-kanban\", JSON.stringify(boards));\r\n    }, [boards]);\r\n\r\n    return (\r\n        <>      <div className=\"app_nav\">\r\n            <h1>Kanban Board</h1>\r\n            <IoIosLogOut className=\"app_nav_logout\" onClick={() => {\r\n                window.localStorage.clear();\r\n                history.push(\"/\");\r\n                toast.success(\"Logout successfully\");\r\n            }} />\r\n        </div>\r\n            <div className=\"app_boards_container\">\r\n                <div className=\"app_boards\">\r\n                    {boards.map((item) => (\r\n                        <Board\r\n                            key={item.id}\r\n                            board={item}\r\n                            addCard={addCardHandler}\r\n                            removeBoard={() => removeBoard(item.id)}\r\n                            removeCard={removeCard}\r\n                            dragEnded={dragEnded}\r\n                            dragEntered={dragEntered}\r\n                            updateCard={updateCard}\r\n                        />\r\n                    ))}\r\n                    <div className=\"app_boards_last\">\r\n                        <Editable\r\n                            displayClass=\"app_boards_add-board\"\r\n                            editClass=\"app_boards_add-board_edit\"\r\n                            placeholder=\"Enter Board Name\"\r\n                            text=\"Add Board\"\r\n                            buttonText=\"Add Board\"\r\n                            onSubmit={addboardHandler}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Kanban;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IoIosLogOut } from \"react-icons/io\";\r\nimport toast from \"react-hot-toast\";\r\nimport \"./auth.css\";\r\n\r\nfunction Login() {\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\")\r\n    const [authData, setAuthData] = useState(JSON.parse(window.localStorage.getItem(\"authData\")) || {})\r\n    const handleLogin = () => {\r\n        if (!email || !password) {\r\n            toast.error(\"Please fill in all fields\");\r\n            return;\r\n        }\r\n        if (email === authData.email && password === authData.password) {\r\n            history.push(\"/kanban\")\r\n            toast.success(\"Login successfully\")\r\n        }\r\n        else {\r\n            toast.error(\"email or password is wrong\")\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"app_nav\">\r\n                <h1>Kanban Board</h1>\r\n                <IoIosLogOut className=\"app_nav_logout\" onClick={() => {\r\n                    window.localStorage.clear();\r\n                    history.push(\"/\");\r\n                    toast.success(\"Logout successfully\");\r\n                }} />\r\n            </div>\r\n            <div className=\"app_boards_container\">\r\n                <div className=\"auth_box\">\r\n                    <h2 className=\"auth_heading\">Login</h2>\r\n                    <label className=\"auth_label\">Email<span>*</span></label>\r\n                    <input className=\"auth_inputs\" value={email} type=\"text\" placeholder=\"Enter your registered email\" onChange={(e) => setEmail(e.target.value)} />\r\n                    <label className=\"auth_label\">Password<span>*</span></label>\r\n                    <input className=\"auth_inputs\" value={password} type=\"password\" placeholder=\"Enter your password\" onChange={(e) => setPassword(e.target.value)} />\r\n                    <button className=\"auth_button\" onClick={handleLogin}>Login</button>\r\n\r\n                    <p className=\"auth_not_registered\">Not registered yet? <span onClick={() => history.push(\"/register\")}>Register</span></p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport toast from 'react-hot-toast';\r\nimport { IoIosLogOut } from \"react-icons/io\";\r\nimport \"./auth.css\";\r\n\r\nfunction Register() {\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n\r\n    const handleRegister = () => {\r\n        // Basic field validation\r\n        if (!email || !password) {\r\n            toast.error(\"Please fill in all fields\");\r\n            return;\r\n        }\r\n\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n        };\r\n        window.localStorage.setItem(\"authData\", JSON.stringify(authData));\r\n        history.push(\"/kanban\");\r\n    };\r\n\r\n    return (\r\n        <>      <div className=\"app_nav\">\r\n            <h1>Kanban Board</h1>\r\n            <IoIosLogOut className=\"app_nav_logout\" onClick={() => {\r\n                window.localStorage.clear();\r\n                history.push(\"/\");\r\n                toast.success(\"Logout successfully\");\r\n            }} />\r\n        </div>\r\n            <div className=\"app_boards_container\">\r\n                <div className=\"auth_box\">\r\n                    <h2 className=\"auth_heading\">Register</h2>\r\n                    <label className=\"auth_label\">\r\n                        Email<span>*</span>\r\n                    </label>\r\n                    <input\r\n                        className=\"auth_inputs\"\r\n                        value={email}\r\n                        type=\"text\"\r\n                        placeholder=\"Enter your registered email\"\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                    <label className=\"auth_label\">\r\n                        Password<span>*</span>\r\n                    </label>\r\n                    <input\r\n                        className=\"auth_inputs\"\r\n                        value={password}\r\n                        type=\"password\"\r\n                        placeholder=\"Enter your password\"\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                    <button className=\"auth_button\" onClick={handleRegister}>\r\n                        Register\r\n                    </button>\r\n                    <p className=\"auth_not_registered\">Already have an account! <span onClick={() => history.push(\"/\")}>Login</span></p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Register;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Kanban from \"./view/pages/kanban\";\nimport Login from \"./view/auth/login\";\nimport Register from \"./view/auth/register\";\nimport { Toaster } from 'react-hot-toast';\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Router>\n        <Toaster />\n        <Switch>\n          <Route path=\"/\" exact component={Login} />\n          <Route path=\"/register\" exact component={Register} />\n          <Route path=\"/kanban\" exact component={Kanban} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}